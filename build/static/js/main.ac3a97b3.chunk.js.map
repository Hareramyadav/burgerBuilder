{"version":3,"sources":["Components/Burger/BurgerIngredients/BurgerIngredients.module.css","Components/Navigation/SideDrawer/SideDrawer.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/UI/Input/Input.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Components/Burger/BuildControls/BuildControls.module.css","Components/UI/Button/Button.module.css","Containers/Layout/Layout.module.css","assets/images/original.png","Components/Logo/Logo.module.css","Components/Navigation/NavigationItems/NavigationItems.module.css","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/Burger/Burger.module.css","Components/UI/Modal/Modal.module.css","Components/UI/Spinner/Spinner.module.css","Components/Order/CheckoutSummary/CheckoutSummary.module.css","Containers/Checkout/ContactData/ContactData.module.css","Components/Order/Order.module.css","Containers/Auth/Auth.module.css","hoc/Aux.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","Containers/Layout/Layout.js","Components/Burger/BurgerIngredients/BurgerIngredients.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","Components/Burger/OrderSummary/OrderSummary.js","Components/UI/Spinner/Spinner.js","hoc/errorHandler/errorHandler.js","axios-orders.js","Containers/BurgerBuilder/BurgerBuilder.js","Components/Order/CheckoutSummary/CheckoutSummary.js","Components/UI/Input/Input.js","Containers/Checkout/ContactData/ContactData.js","Containers/Checkout/Checkout.js","Components/Order/Order.js","Store/actions/auth.js","Store/actions/actionTypes.js","Containers/Checkout/Orders/Orders.js","Store/actions/order.js","Containers/Auth/Auth.js","App.js","serviceWorker.js","Store/reducers/utility.js","Store/reducers/order.js","Store/reducers/reducer.js","Store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","openMenu","DesktopOnly","isAuth","backdrop","show","Backdrop","click_to_remove_modal","sideDrawer","hideSidedrawer","SideDrawer","Close","open","Open","Aux","close","join","Layout","state","showSideDrawer","closeSidedrawerHandler","setState","openSideDrawerMenuHandler","prevState","this","isAutenticated","Content","Component","connect","auth","token","burgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","BurgerIngredients","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","remove","disabled","disable","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemove","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","orderSummary","ingredientsSummary","textTransform","textAlign","purchseCancelled","purchaseContinued","spinner","Loader","errorHandler","WrappedComponent","axios","error","errorConfirmedhandler","interceptors","request","use","response","message","instance","create","baseURL","INGREDIENT_PRICES","salad","meat","cheese","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","priceRemove","purchaseHandler","removePurchaseHandler","continuePurchaseHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","sum","igkey","disabledInfo","OrderSummary","Spinner","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","country","zip_code","minLength","maxLength","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","orderFormInputidentifier","order","orderData","post","then","catch","formValueHandler","inputIdentifier","updatedorderForm","updatedformElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","amount","ingredientOutput","ig","display","border","boxSizing","boxShadow","padding","Order","password","isSignUp","dispatch","authData","returnSecureToken","url","userId","expirationTime","data","idToken","localId","expiresIn","setTimeout","authFail","Orders","onFetchOrders","orders","get","res","fetchedOrders","err","actions","Auth","isEmail","controlName","updatedControlsForm","submitHandler","onAuth","switchAuthModeHandler","test","errorMessage","App","component","BurgerBuilder","Boolean","window","hostname","updateObject","oldObject","updatedProperties","initialState","purchased","purchaseInit","action","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderId","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","ingredientsName","authStart","authSuccess","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","notusedReducer","mainreducer","authReducer","orderReducer","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac3a97b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__B06HT\",\"BreadTop\":\"BurgerIngredients_BreadTop__222Fa\",\"Seeds1\":\"BurgerIngredients_Seeds1__2rVlL\",\"Seeds2\":\"BurgerIngredients_Seeds2__13Tqd\",\"Meat\":\"BurgerIngredients_Meat__1SAsI\",\"Cheese\":\"BurgerIngredients_Cheese__3zeOT\",\"Salad\":\"BurgerIngredients_Salad__1BKc-\",\"Bacon\":\"BurgerIngredients_Bacon__GKicd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__mBwT_\",\"Open\":\"SideDrawer_Open__2YCRM\",\"Close\":\"SideDrawer_Close__1KiEK\",\"Logo\":\"SideDrawer_Logo__3Cl7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__b_bIv\",\"Label\":\"BuildControl_Label__10iUW\",\"Less\":\"BuildControl_Less__20jsZ\",\"More\":\"BuildControl_More__1j5pS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3cBI6\",\"Label\":\"Input_Label__1v3Uc\",\"InputElement\":\"Input_InputElement__3rTLZ\",\"Invalid\":\"Input_Invalid__3Dkzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__24NhD\",\"Logo\":\"Toolbar_Logo__3AGXq\",\"DesktopOnly\":\"Toolbar_DesktopOnly__CitsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1yhtf\",\"active\":\"NavigationItem_active__2ySZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2s5MW\",\"OrderButton\":\"BuildControls_OrderButton__1p9QS\",\"enable\":\"BuildControls_enable__3CJAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ouAX\",\"Success\":\"Button_Success__1BGa4\",\"Danger\":\"Button_Danger__18hgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3HqCG\"};","module.exports = __webpack_public_path__ + \"static/media/original.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__yqy_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__13L9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2h9XM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3cPEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3aj9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__-GjUy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2C0iS\",\"load2\":\"Spinner_load2__gOh_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2X4PA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__39De1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Jn93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__34800\"};","const aux =(props)=> props.children;\nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/original.png';\nimport classes from './Logo.module.css';\n\nconst logo = ()=>(\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt='logo'/>\n    </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst navigationItem=(props)=>(\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link} \n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;\n","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems =(props)=>(\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\n        <NavigationItem link='/orders'>Orders</NavigationItem>\n        {!props.isAuthenticated\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;\n","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle =(props)=>(\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\n\nconst toolbar =(props)=>(\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.openMenu}/>\n        <div className={classes.Logo}>\n            <Logo/>\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop =(props)=>(\n    props.show ? <div className={classes.Backdrop} onClick={props.click_to_remove_modal}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport BackDrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux';\n\n\nconst sideDrawer =(props)=>{\n    let hideSidedrawer =[classes.SideDrawer, classes.Close];\n    if(props.open){\n        hideSidedrawer =[classes.SideDrawer, classes.Open];\n    }\n    return(\n        <Aux>\n            <BackDrop show={props.open} click_to_remove_modal={props.close}/>\n            <div className={hideSidedrawer.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo/>\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth}/>\n                </nav>\n                \n            </div>\n        </Aux>\n    );\n}\n\nexport default sideDrawer;","import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../Components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../Components/Navigation/SideDrawer/SideDrawer';\n\nimport {connect} from 'react-redux';\n\nclass Layout extends Component{\n\n    state={\n        showSideDrawer:false,\n    }\n\n    closeSidedrawerHandler=()=>{\n        this.setState({showSideDrawer:false});\n    }\n\n    openSideDrawerMenuHandler=(prevState)=>{\n        return this.setState({showSideDrawer:!prevState.showSideDrawer});\n    }\n\n    render(){\n        return(\n            <Aux>\n                <Toolbar\n                    isAuth={this.props.isAutenticated}\n                    openMenu={this.openSideDrawerMenuHandler}/>\n                <SideDrawer\n                    isAuth={this.props.isAutenticated} \n                    open={this.state.showSideDrawer} \n                    close={this.closeSidedrawerHandler}/>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);\n\n/* since navigationItems is not class based component, so we cannot use redux.\nso we can manage navigation from layout */","import React from 'react';\nimport classes from '../BurgerIngredients/BurgerIngredients.module.css'\nimport PropType from 'prop-types';\n\nconst burgerIngredients =(props)=>{\n    let ingredient = null; \n    switch (props.type){\n        case('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>\n            break;\n        default:\n            ingredient = null;\n    }\n    return ingredient;\n};\n\nburgerIngredients.propTypes={\n    type: PropType.string.isRequired\n};\n\nexport default burgerIngredients;","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\n\n\n\nconst burger =(props)=>{\n    console.log(props);\n    //this is the way of converting js object to array\n    let transformedIngredients=Object.keys(props.ingredients)\n    .map(igKey=>{\n        return[...Array(props.ingredients[igKey])].map((_,i)=>{\n            return <BurgerIngredients key={igKey+i} type={igKey}/>;\n        });\n    })\n    .reduce((arr, el)=>{\n        return arr.concat(el);\n    }, []);\n    //console.log(transformedIngredients);\n    if(transformedIngredients.length===0){\n        transformedIngredients=<p>Please Start Adding Ingredients</p>\n    }\n    //Here burger is props but state is object so to use object in props \n    //we need to change props to object by using object keyword.\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredients type='bread-top'/>\n            {transformedIngredients}\n            <BurgerIngredients type='bread-bottom'/>\n\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.module.css';\n\nconst buildControl =(props)=>(\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} onClick={props.remove} disabled={props.disable}>Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls=[\n    {label: 'Salad', type:'salad'},\n    {label: 'Bacon', type:'bacon'},\n    {label: 'Cheese', type:'cheese'},\n    {label: 'Meat', type:'meat'}\n];\n\nconst buildControls = (props)=>(\n    <div className={classes.BuildControls}>\n        <p>Current Price:<strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl=>(\n            <BuildControl \n                key={ctrl.label} label={ctrl.label}\n                added={()=>props.ingredientAdded(ctrl.type)}\n                remove={()=>props.ingredientRemove(ctrl.type)}\n                disable={props.disabled[ctrl.type]}/>\n        ))}\n        <button className={classes.OrderButton} disabled={!props.purchasable}\n        onClick={props.ordered}>ORDER NOW</button>\n\n    </div>\n);\n\nexport default buildControls;","import React, {Component} from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\n\nclass Modal extends Component{\n    \n    shouldComponentUpdate(nextProps, nextState){\n        return (nextProps.show!==this.props.show || nextProps.children!==this.props.children);\n    }\n\n    // componentWillUpdate(){\n    //     console.log('[Modal] Will update');\n    // }\n\n    render(){\n        return(\n        <Aux>\n            <Backdrop show={this.props.show} click_to_remove_modal={this.props.modalClosed}/>\n            <div \n                className={classes.Modal}\n                style={{\n                    transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)',\n                    opacity: this.props.show ? '1': '0',\n                }}>\n                {this.props.children}\n            </div>\n        </Aux>\n        );\n    }\n} \nexport default Modal;\n","import React from 'react';\nimport classes from './Button.module.css';\n\n\nconst button =(props)=>(\n    <button \n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary =(props)=>{\n    const ingredientsSummary = Object.keys(props.ingredients)\n    .map(igKey=>{\n    return <li key={igKey}><span style={{textTransform:'capitalize'}}>{igKey}</span>:{props.ingredients[igKey]}</li>\n    });\n    return(\n        <Aux>\n            <h3>Your Order Summary</h3>\n            <p>A delicious burger with following ingredients: </p>\n            <ul>\n                {ingredientsSummary}\n            </ul>\n            <p>Continue to Checkout?</p>\n            <p style={{textAlign:'center'}}><strong>Total Price:{props.price.toFixed(2)}</strong></p>\n            <Button btnType='Danger' clicked={props.purchseCancelled}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n    );\n};\n\nexport default orderSummary;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner=()=>(\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, {Component} from 'react';\nimport Aux from '../Aux';\nimport Modal from '../../Components/UI/Modal/Modal';\n\nconst errorHandler =(WrappedComponent,axios)=>{\n    return class extends Component{\n        state={\n            error:null\n        }\n        componentDidMount(){\n            axios.interceptors.request.use=()=>{\n                this.setState({error:null});\n            }\n            axios.interceptors.response.use(null,error=>{\n                this.setState({error: error});\n            });\n        }\n\n        errorConfirmedhandler=()=>{\n            this.setState({error:null});\n        }\n\n        render(){\n            return(\n                <Aux>\n                    <Modal show={this.state.error}\n                    modalClosed={this.errorConfirmedhandler}>\n                        {this.state.error ? this.state.error.message: null}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default errorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:'https://my-react-burger-b3504.firebaseio.com/'\n});\n\nexport default instance;\n","import React,{ Component }  from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nimport errorHandler from '../../hoc/errorHandler/errorHandler';\nimport axios from '../../axios-orders';\n// import * as actionTypes from '../../Store/actions/actionTypes';\n// import {connect} from 'react-redux';\n\n\nconst INGREDIENT_PRICES={\n    salad: 0.5,\n    meat: 1.5,\n    cheese: 0.75,\n    bacon: 0.5\n};\n\nclass BurgerBuilder extends Component{\n    state ={\n        ingredients: {\n            salad: 0,\n            meat: 0,\n            bacon: 0,\n            cheese: 0\n        },\n        totalPrice:4,\n        purchasable: false,\n        purchasing:false ,  // condition for checking either order button is clicked or not\n        loading:false,\n        error:false\n    }\n\n    componentDidMount(){\n        console.log(this.props);\n        // axios.get('https://my-react-burger-b3504.firebaseio.com/ingredients.json')\n        // .then(response=>{\n        //     this.setState({ingredients:response.data});\n        // })\n        // .catch(error=>{\n        //     this.setState({error : true })\n        // });\n    }\n\n    updatePurchaseState(ingredients){\n        console.log(this.props);\n        const sum = Object.keys(ingredients).map(igkey =>{\n            return ingredients[igkey];\n        })\n        .reduce((sum,el)=>{\n            return sum + el;\n        }, 0);\n        this.setState({purchasable:sum> 0})\n    }\n\n    addIngredientHandler=(type)=>{\n        const oldCount=this.state.ingredients[type];\n        const updatedCount= oldCount + 1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        };\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n\n    }\n\n    removeIngredientHandler=(type)=>{\n        const oldCount=this.state.ingredients[type];\n        // if(oldCount<=0){\n        //     return;\n        // }\n        const updatedCount= oldCount-1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        };\n        updatedIngredients[type]=updatedCount;\n        const priceRemove=INGREDIENT_PRICES[type];\n        const oldPrice=this.state.totalPrice;\n        const newPrice=oldPrice - priceRemove;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n\n    }\n    \n// it handles order now button\n    purchaseHandler=()=>{\n        this.setState({purchasing:true});\n    }\n\n    removePurchaseHandler=()=>{\n        this.setState({purchasing:false});\n    }\n\n    continuePurchaseHandler=()=>{\n        /*this is the way to send query to the server so that we can \n        extract from server where we need.*/\n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname:'/checkout',\n            search:'?' + queryString\n        });      \n    }\n\n\n    render(){\n        const disabledInfo={\n            ...this.state.ingredients\n        }\n        for(let key in disabledInfo){\n            disabledInfo[key]=disabledInfo[key]<=0\n        }\n\n        let orderSummary=(\n            <OrderSummary \n                ingredients={this.state.ingredients}\n                purchseCancelled={this.removePurchaseHandler}\n                purchaseContinued={this.continuePurchaseHandler}\n                price={this.state.totalPrice}/>\n        )\n        if(this.state.loading){\n            orderSummary=<Spinner/>\n        }\n        return(\n            <Aux>\n                    <Modal show={this.state.purchasing} modalClosed={this.removePurchaseHandler}>\n                        {orderSummary}\n                    </Modal>\n                    <Burger ingredients={this.state.ingredients}/>\n                    <BuildControls \n                        ingredientAdded={this.addIngredientHandler}\n                        ingredientRemove={this.removeIngredientHandler}\n                        disabled={disabledInfo}\n                        price={this.state.totalPrice}\n                        purchasable={this.state.purchasable}\n                        ordered={this.purchaseHandler}/>\n            </Aux>\n        );\n    }\n}\n\n// const mapStateToProps = state =>{\n//     return{\n//         ings: state.ingredients\n//     }\n// }\n\n// const mapDispatchToProps= dispatch =>{\n//     return{\n//         onIngredientsAdded: (igName)=> dispatch({type:actionTypes.ADD_INGREDIENTS, ingredients:igName}),\n//         onIngredientsAdded: (igName)=> dispatch({type:actionTypes.REMOVE_INGREDIENTS, ingredients:igName})\n//     }\n// }\n\nexport default errorHandler(BurgerBuilder, axios);\n","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary=(props)=>{\n    return(\n        <div className={classes.CheckoutSummary}>\n            <h1>Hope it taste well!!!</h1>\n            <div style={{width:'100%', margin:'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button btnType='Danger' clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.module.css';\n\nconst input =(props)=>{\n    let inputElement=null;\n    const inputClasses=[classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch(props.elementType){\n        case('input'):\n            inputElement= <input\n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>;\n            break;\n        case('textarea'):\n            inputElement= <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>;\n            break;\n        case('select'):\n            inputElement=(\n                <select className={inputClasses.join(' ')} \n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option =>(\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}</option>\n                    ))}\n                </select>);\n            break;\n        default:\n            inputElement= <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>\n    }\n    return(\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\n\nexport default input;\n\n","import React, { Component } from \"react\";\nimport Button from '../../../Components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\nimport Input from '../../../Components/UI/Input/Input';\n\n\nclass ContactData extends Component{\n    state={\n        orderForm:{\n                name:{\n                    elementType:'input',\n                    elementConfig:{\n                        type:'text',\n                        placeholder:'Your Name'\n                    },\n                    value:'',\n                    validation:{\n                        required:true\n                    },\n                    valid:false,\n                    touched:false\n                },\n                street:{\n                    elementType:'input',\n                    elementConfig:{\n                        type:'text',\n                        placeholder:'street'\n                    },\n                    value:'',\n                    validation:{\n                        required:true\n                    },\n                    valid:false,\n                    touched:false\n                },\n                country:{\n                    elementType:'input',\n                    elementConfig:{\n                        type:'text',\n                        placeholder:'Country'\n                    },\n                    value:'',\n                    validation:{\n                        required:true\n                    },\n                    valid:false,\n                    touched:false\n                },\n                zip_code:{\n                    elementType:'input',\n                    elementConfig:{\n                        type:'number',\n                        placeholder:'ZIP Code'\n                    },\n                    value:'',\n                    validation:{\n                        required:true,\n                        minLength:5,\n                        maxLength:5\n                    },\n                    valid:false,\n                    touched:false\n                },\n                email:{\n                    elementType:'input',\n                    elementConfig:{\n                        type:'email',\n                        placeholder:'Your E-mail'\n                    },\n                    value:'',\n                    validation:{\n                        required:true\n                    },\n                    valid:false,\n                    touched:false\n                },\n                deliveryMethod:{\n                    elementType:'select',\n                    elementConfig:{\n                        options:[\n                            {value:'fastest', displayValue:'fastest'},\n                            {value:'cheapest', displayValue:'cheapest'}\n                        ]\n                    },\n                    value:'',\n                    validation:{},//if validation is not required leave validation empty\n                    valid:true\n                }\n            },\n            formIsValid:false,\n            loading:false\n        }\n\n    orderHandler=(event)=>{\n        event.preventDefault();\n        //  alert('Continue to Checkout');\n        this.setState({loading:true});\n        const formData={};\n        for (let orderFormInputidentifier in this.state.orderForm){\n            formData[orderFormInputidentifier]=this.state.orderForm[orderFormInputidentifier].value;\n        }\n        const order={\n            ingredients:this.props.ingredients,\n            price:this.props.price,\n            orderData:formData\n            \n        }\n        axios.post('/orders.json',order)\n            .then(response=>{\n                this.setState({loading:false});\n                this.props.history.push('/');\n            })\n            .catch(error=>{\n                this.setState({loading:false});\n            });\n    }\n\n    checkValidity(value, rules){\n        if(!rules){                     //if validation is not necessary in some tags like dropdown\n            return true                 // we use this  in this we are usin both validation-empty and this \n        }\n\n        let isValid=true;\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n        if(rules.minLength){\n            isValid=value.length >= rules.minLength && isValid;\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        return isValid;\n    }\n\n\n    formValueHandler=(event, inputIdentifier)=>{\n        //console.log(event.target.value);\n        const updatedorderForm = {\n            ...this.state.orderForm\n        };\n        const updatedformElement = {\n            ...updatedorderForm[inputIdentifier]\n        };\n        updatedformElement.value=event.target.value;\n        updatedformElement.valid=this.checkValidity(updatedformElement.value, updatedformElement.validation);\n        updatedorderForm[inputIdentifier]=updatedformElement;\n        updatedformElement.touched=true;\n        \n        let formIsValid=true;\n        for(let inputIdentifier in updatedorderForm){\n            formIsValid=updatedorderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedorderForm, formIsValid: formIsValid});\n\n    }\n\n    render(){\n        const formElementsArray=[];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id:key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement=>(\n                    <Input key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched} \n                        changed={(event)=>this.formValueHandler(event, formElement.id)}/>\n                ))}\n                <Button btnType='Success' disabled={!this.state.formIsValid}>ORDER</Button>\n                {/* clicked={this.orderHandler} this is property of Button */}\n            </form>\n        );\n        if(this.state.loading){\n            form=<Spinner/>\n        }\n        return(\n            <div className={classes.ContactData}>\n                <h1>Enter Your Data</h1>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;\n\n","import React, { Component } from \"react\";\nimport CheckoutSummary from '../../Components/Order/CheckoutSummary/CheckoutSummary';\nimport {Route} from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component{\n    state={\n        ingredients:null,\n        price:0\n    }\n\n    componentWillMount(){\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients={};\n        let price=0;\n        for(let param of query.entries()) {\n            //['salad','1']\n            if(param[0] === 'price'){\n                price = param[1];\n            }\n            else{\n                ingredients[param[0]] = +param[1]; //+param[1] is showing invalid array length so using param[1]\n            }\n        }\n        this.setState({ingredients: ingredients, totalPrice: price});\n    }\n\n    checkoutCancelledHandler=()=>{\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler=()=>{\n        this.props.history.replace('/checkout/order-data');\n    }\n\n    render(){\n            return(\n                <div>\n                    <CheckoutSummary \n                        ingredients={this.state.ingredients}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler}/>\n                    <Route path={this.props.match.path + '/order-data'} \n                        render={(props)=>(<ContactData \n                            ingredients={this.state.ingredients} \n                            price={this.state.totalPrice} {...props}/>)}/>\n                </div>\n            )\n        \n    }\n}\n\nexport default Checkout;","import React from 'react';\nimport classes from './Order.module.css';\n\nconst order =(props)=>{\n    //this is also a way to convert object to array  from const ingredients to return <span>\n    const ingredients=[];\n    for(let ingredientName in props.ingredients){\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput=ingredients.map(ig=>{\n        return <span key={ig.name}\n            style={{\n                display:'inline-block',\n                border:'1px solid #ccc',\n                boxSizing:'border-box',\n                boxShadow:'0 4px 3px #eee',\n                margin:'0 10px',\n                padding:'5px'\n\n            }}>{ig.name} ({ig.amount})</span>\n    });\n\n    return(\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price:<strong>Rs {props.price}</strong></p>\n        </div>\n    )\n};\n\nexport default order;\n\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\n\nexport const authStart=()=>{\n    return{\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess=(token, userId)=>{\n    return{\n        type:actionTypes.AUTH_SUCCESS,\n        idToken:token,\n        userId:userId\n    };\n};\n\nexport const authFail=(error)=>{\n    return{\n        type:actionTypes.AUTH_FAIL,\n        error:error\n    };\n};\n\nexport const authLogout=()=>{\n    return{\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout=(expirationTime)=>{\n    return dispatch=>{\n        setTimeout(()=>{\n            dispatch(authLogout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignUp)=>{\n    return dispatch =>{\n        dispatch(authStart());\n        const authData={\n            email:email,\n            password:password,\n            returnSecureToken:true,\n        };\n        let url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBy1TO2sjRyTXrQ3kyXcZWJSScWmlmoTU4';\n        if(!isSignUp){\n            url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBy1TO2sjRyTXrQ3kyXcZWJSScWmlmoTU4';\n        }\n        axios.post(url, authData)\n            .then(response=>{\n                console.log(response);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(error=>{\n                console.log(error);\n                dispatch(authFail(error.response.data.error));\n                \n            })\n    };\n};\n\n/* to save data of logged in user like token, localid or user id : in post url \nabove do following things: response.data.token, response.data.localId.\nwe can also save refreshToken if we want to remember user password for more than 1 hour.\nwe can also display error what we got in form by using .catch as shown above.*/\n","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT='AUTH_LOGOUT';","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\n\nimport Order from '../../../Components/Order/Order';\nimport axios from '../../../axios-orders';\nimport errorHandler from '../../../hoc/errorHandler/errorHandler';\nimport * as actions from '../../../Store/actions/index';\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\n\n\n// import {connect} from 'react-redux';\n\n// class Orders extends Component{\n\n//     state={\n//         orders:[],\n//         loading:true\n//     }\n    \n//     componentDidMount(){\n//         axios.get('/orders.json')\n//             .then(res=>{\n//                 const fetchedOrders=[];\n//                 for (let key in res.data){\n//                     fetchedOrders.push({\n//                         ...res.data[key],\n//                         id:[key]\n//                     });\n//                 }\n//                 this.setState({loading:false, orders: fetchedOrders});\n//             })\n//             .catch(err=>{\n//                 this.setState({loading:false});\n//             })\n//     }\n    \n\n//     render(){\n//         return(\n//             <div>\n//                 {this.state.orders.map(order=>\n//                     <Order key={order.id}\n//                     ingredients={order.ingredients}\n//                     price={order.price}/>\n//                 )}\n//             </div>\n//         );\n//     }\n// }\n\n// const mapStateToProps= state =>{\n//     return{\n//         token:state.auth.token\n//     }\n// }\n\n// export default connect(mapStateToProps, null) (errorHandler (Orders, axios));\n\nclass Orders extends Component {\n    componentDidMount () {\n        this.props.onFetchOrders(this.props.token);\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token) => dispatch( actions.fetchOrders(token) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( errorHandler( Orders, axios ) );\n\n/* the above commented code is used for managing state in same file.\nbut below code is used to manage state by redux */","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData, token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post( '/orders.json?auth=' + token, orderData )\n            .then( response => {\n                console.log( response.data );\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n            } )\n            .catch( error => {\n                dispatch( purchaseBurgerFail( error ) );\n            } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get( '/orders.json?auth=' + token)\n            .then( res => {\n                const fetchedOrders = [];\n                for ( let key in res.data ) {\n                    fetchedOrders.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            } )\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            } );\n    };\n};","import React, { Component } from \"react\";\nimport classes from './Auth.module.css';\nimport Input from '../../Components/UI/Input/Input';\nimport Button from '../../Components/UI/Button/Button';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\n\nimport * as actions from '../../Store/actions/index';\nimport {connect} from 'react-redux';\n\n\nclass Auth extends  Component{\n\n    state={\n        controls:{\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'Mail Address'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                isEmail:true,\n                touched:false\n            },\n            password:{\n                elementType:'input',\n                elementConfig:{\n                    type:'password',\n                    placeholder:'Password'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:8\n                },\n                valid:false,\n                touched:false\n            }\n        },\n        isSignUp:true\n    }\n\n    checkValidity(value, rules){\n        if(!rules){                     //if validation is not necessary in some tags like dropdown\n            return true                 // we use this  in this we are usin both validation-empty and this \n        }\n\n        let isValid=true;\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n        if(rules.isEmail){\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n        if(rules.minLength){\n            isValid=value.length >= rules.minLength && isValid;\n        }\n        return isValid;\n    }\n\n    formValueHandler=(event, controlName)=>{\n        const updatedControlsForm={\n            ...this.state.controls,\n            [controlName]:{\n                ...this.state.controls[controlName],\n                value:event.target.value,\n                valid:this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched:true\n            }\n        }\n        this.setState({controls:updatedControlsForm})\n    }\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp );\n    }\n\n    switchAuthModeHandler=()=>{\n        this.setState(prevState=>{\n            return{\n                isSignUp: !prevState.isSignUp\n            };\n        })\n    }\n\n    render(){\n        const formElementsArray=[];\n        for(let key in this.state.controls){\n            formElementsArray.push({\n                id:key,\n                config:this.state.controls[key]\n            })\n        }\n        let form = formElementsArray.map(formElement=>(\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched} \n                        changed={(event)=>this.formValueHandler(event, formElement.id)}/>\n                ))\n\n                if(this.props.loading){\n                    form = <Spinner/>\n                }\n\n                let errorMessage=null;\n                if(this.props.error){\n                    errorMessage=(\n                        <p>{this.props.error.message}</p>\n                    )\n                }\n\n        return(\n            <div className={classes.Auth}>\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType='Success'>SUBMIT</Button>\n                </form>\n        <Button btnType='Danger' clicked={this.switchAuthModeHandler}>SWITCH TO {this.state.isSignUp ? 'SIGNIN':'SIGNUP'}</Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state=>{\n    return{\n        loading:state.auth.loading,\n        error:state.auth.error\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onAuth: ( email, password, isSignUp ) => dispatch( actions.auth( email, password, isSignUp ) )\n    };\n};\n        \n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n\n/* above in mapStateToProps auth is used because reducer is set as auth in index.js  */","import React, {Component} from 'react';\nimport Layout from './Containers/Layout/Layout';\nimport BurgerBuilder from './Containers/BurgerBuilder/BurgerBuilder';\nimport Toolbar from './Components/Navigation/Toolbar/Toolbar';\nimport Checkout from './Containers/Checkout/Checkout';\nimport {Route, Switch} from 'react-router-dom';\nimport Orders from './Containers/Checkout/Orders/Orders';\nimport Auth from './Containers/Auth/Auth';\n\nclass App extends Component{\n  render(){\n    return(\n        <div>\n          <Toolbar/>\n          <Layout>\n            <Switch>\n              <Route path='/checkout' component={Checkout}/>\n              <Route path='/orders' component={Orders}/>\n              <Route path='/auth' component={Auth}/>\n              <Route path='/' component={BurgerBuilder}/>\n            </Switch>\n          </Layout>\n          \n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject=(oldObject, updatedProperties)=>{\n    return{\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from './utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\n\n// this reducer is not used in this app\n\nconst initialState={\n    ingredients: {\n        salad: 0,\n        meat: 0,\n        bacon: 0,\n        cheese: 0\n    },\n    totalPrice:4\n}\n\nconst reducer = (state = initialState, action) =>{\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENTS:\n            return{\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    [action.ingredientsName]: state.ingredients[action.ingredientsName]+1\n                }\n            }\n        case actionTypes.REMOVE_INGREDIENTS:\n            return{\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    [action.ingredientsName]: state.ingredients[action.ingredientsName]-1\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../reducers/utility';\n\n\nconst initialState={\n    token:null,\n    userId:null,\n    error:null,\n    loading:false  \n}\n\nconst authStart =(state, action)=>{\n    return updateObject(state, {error:null, loading:true})\n};\n\nconst authSuccess=(state, action)=>{\n    return updateObject(state, {\n        token:action.idToken,\n        userId:action.userId,\n        error: null,\n        loading:false\n    });\n};\n\nconst authFail=(state, action)=>{\n    return updateObject(state, {\n        error:action.error,\n        loading:false\n    });\n};\n\nconst authLogout=(state, action)=>{\n    return updateObject(state, {token:null, userId:null})\n};\n\nconst reducer=(state = initialState, action)=>{\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        \n        default:\n            return state\n            \n    };\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport orderReducer from './Store/reducers/order';\nimport mainreducer from './Store/reducers/reducer';\nimport authReducer from './Store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer= combineReducers({\n  notusedReducer:mainreducer,\n  auth: authReducer,\n  order:orderReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}